// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bookmarks.proto

package bookmarkspb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_None         Status = 0
	Status_Online       Status = 1
	Status_Offline      Status = 2
	Status_UnAccessAble Status = 3
)

var Status_name = map[int32]string{
	0: "None",
	1: "Online",
	2: "Offline",
	3: "UnAccessAble",
}

var Status_value = map[string]int32{
	"None":         0,
	"Online":       1,
	"Offline":      2,
	"UnAccessAble": 3,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f34b23b733e42bc7, []int{0}
}

type AddRequest struct {
	URL                  string   `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Status               Status   `protobuf:"varint,3,opt,name=Status,proto3,enum=bookmarks.Status" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f34b23b733e42bc7, []int{0}
}
func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return m.Size()
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *AddRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AddRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_None
}

type AddResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f34b23b733e42bc7, []int{1}
}
func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return m.Size()
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

type LastAddedRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastAddedRequest) Reset()         { *m = LastAddedRequest{} }
func (m *LastAddedRequest) String() string { return proto.CompactTextString(m) }
func (*LastAddedRequest) ProtoMessage()    {}
func (*LastAddedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f34b23b733e42bc7, []int{2}
}
func (m *LastAddedRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LastAddedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LastAddedRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LastAddedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastAddedRequest.Merge(m, src)
}
func (m *LastAddedRequest) XXX_Size() int {
	return m.Size()
}
func (m *LastAddedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LastAddedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LastAddedRequest proto.InternalMessageInfo

type LastAddedResponse struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	URL                  string   `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Status               Status   `protobuf:"varint,4,opt,name=Status,proto3,enum=bookmarks.Status" json:"Status,omitempty"`
	LastTimes            int64    `protobuf:"varint,5,opt,name=lastTimes,proto3" json:"lastTimes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastAddedResponse) Reset()         { *m = LastAddedResponse{} }
func (m *LastAddedResponse) String() string { return proto.CompactTextString(m) }
func (*LastAddedResponse) ProtoMessage()    {}
func (*LastAddedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f34b23b733e42bc7, []int{3}
}
func (m *LastAddedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LastAddedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LastAddedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LastAddedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastAddedResponse.Merge(m, src)
}
func (m *LastAddedResponse) XXX_Size() int {
	return m.Size()
}
func (m *LastAddedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LastAddedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LastAddedResponse proto.InternalMessageInfo

func (m *LastAddedResponse) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *LastAddedResponse) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *LastAddedResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *LastAddedResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_None
}

func (m *LastAddedResponse) GetLastTimes() int64 {
	if m != nil {
		return m.LastTimes
	}
	return 0
}

type AllRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllRequest) Reset()         { *m = AllRequest{} }
func (m *AllRequest) String() string { return proto.CompactTextString(m) }
func (*AllRequest) ProtoMessage()    {}
func (*AllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f34b23b733e42bc7, []int{4}
}
func (m *AllRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AllRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllRequest.Merge(m, src)
}
func (m *AllRequest) XXX_Size() int {
	return m.Size()
}
func (m *AllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllRequest proto.InternalMessageInfo

type AllResponse struct {
	Total                int64                `protobuf:"varint,1,opt,name=Total,proto3" json:"Total,omitempty"`
	Data                 []*LastAddedResponse `protobuf:"bytes,2,rep,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AllResponse) Reset()         { *m = AllResponse{} }
func (m *AllResponse) String() string { return proto.CompactTextString(m) }
func (*AllResponse) ProtoMessage()    {}
func (*AllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f34b23b733e42bc7, []int{5}
}
func (m *AllResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AllResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllResponse.Merge(m, src)
}
func (m *AllResponse) XXX_Size() int {
	return m.Size()
}
func (m *AllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AllResponse proto.InternalMessageInfo

func (m *AllResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *AllResponse) GetData() []*LastAddedResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("bookmarks.Status", Status_name, Status_value)
	proto.RegisterType((*AddRequest)(nil), "bookmarks.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "bookmarks.AddResponse")
	proto.RegisterType((*LastAddedRequest)(nil), "bookmarks.LastAddedRequest")
	proto.RegisterType((*LastAddedResponse)(nil), "bookmarks.LastAddedResponse")
	proto.RegisterType((*AllRequest)(nil), "bookmarks.AllRequest")
	proto.RegisterType((*AllResponse)(nil), "bookmarks.AllResponse")
}

func init() { proto.RegisterFile("bookmarks.proto", fileDescriptor_f34b23b733e42bc7) }

var fileDescriptor_f34b23b733e42bc7 = []byte{
	// 394 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xcd, 0xea, 0xd3, 0x40,
	0x14, 0xc5, 0x33, 0x99, 0xfe, 0xa3, 0xb9, 0xa9, 0x75, 0x7a, 0x51, 0x09, 0x5a, 0x42, 0xc8, 0x2a,
	0xba, 0x28, 0xa5, 0x82, 0xe0, 0xc2, 0x45, 0x4a, 0x40, 0x0b, 0xc5, 0x42, 0xda, 0xae, 0x25, 0x6d,
	0xa6, 0x10, 0x3a, 0x4d, 0x6a, 0x67, 0xea, 0x93, 0x28, 0xf8, 0x48, 0x2e, 0x7d, 0x04, 0xa9, 0x2f,
	0x22, 0xcd, 0x47, 0xd3, 0x6a, 0xd1, 0x85, 0xbb, 0xdc, 0x93, 0xcb, 0x3d, 0xbf, 0xc3, 0x19, 0x78,
	0xb8, 0xcc, 0xf3, 0xcd, 0x36, 0xde, 0x6f, 0x64, 0x7f, 0xb7, 0xcf, 0x55, 0x8e, 0xe6, 0x59, 0xf0,
	0x3e, 0x00, 0x04, 0x49, 0x12, 0xf1, 0x8f, 0x07, 0x2e, 0x15, 0x32, 0xa0, 0x8b, 0x68, 0x62, 0x13,
	0x97, 0xf8, 0x66, 0x74, 0xfa, 0xc4, 0x47, 0x70, 0x37, 0x4f, 0x95, 0xe0, 0xb6, 0x5e, 0x68, 0xe5,
	0x80, 0xcf, 0xc1, 0x98, 0xa9, 0x58, 0x1d, 0xa4, 0x4d, 0x5d, 0xe2, 0x77, 0x86, 0xdd, 0x7e, 0x63,
	0x51, 0xfe, 0x88, 0xaa, 0x05, 0xef, 0x01, 0x58, 0x85, 0x81, 0xdc, 0xe5, 0x99, 0xe4, 0x1e, 0x02,
	0x9b, 0xc4, 0x52, 0x05, 0x49, 0xc2, 0x6b, 0x57, 0xef, 0x33, 0x81, 0xee, 0x85, 0x58, 0x6e, 0x62,
	0x07, 0xf4, 0x71, 0x58, 0xa1, 0xe8, 0xe3, 0xb0, 0x66, 0xd3, 0x6f, 0xb0, 0xd1, 0xdb, 0x6c, 0xad,
	0x7f, 0xb0, 0x61, 0x0f, 0x4c, 0x11, 0x4b, 0x35, 0x4f, 0xb7, 0x5c, 0xda, 0x77, 0x2e, 0xf1, 0x69,
	0xd4, 0x08, 0x5e, 0x1b, 0x20, 0x10, 0xa2, 0x86, 0x5c, 0x80, 0x55, 0x4c, 0x15, 0xdd, 0xc9, 0x3b,
	0x57, 0xb1, 0x28, 0x00, 0x69, 0x54, 0x0e, 0x38, 0x80, 0x56, 0x18, 0xab, 0xd8, 0xd6, 0x5d, 0xea,
	0x5b, 0xc3, 0xde, 0x85, 0xf3, 0x1f, 0xf9, 0xa2, 0x62, 0xf3, 0xc5, 0x9b, 0x9a, 0x16, 0xef, 0x43,
	0xeb, 0x7d, 0x9e, 0x71, 0xa6, 0x21, 0x80, 0x31, 0xcd, 0x44, 0x9a, 0x71, 0x46, 0xd0, 0x82, 0x7b,
	0xd3, 0xf5, 0xba, 0x18, 0x74, 0x64, 0xd0, 0x5e, 0x64, 0xc1, 0x6a, 0xc5, 0xa5, 0x0c, 0x96, 0x82,
	0x33, 0x3a, 0xfc, 0xa2, 0x03, 0x1b, 0xd5, 0x26, 0x33, 0xbe, 0xff, 0x94, 0xae, 0x38, 0xbe, 0x02,
	0x1a, 0x24, 0x09, 0x3e, 0xbe, 0xb0, 0x6f, 0x3a, 0x7e, 0xfa, 0xe4, 0x77, 0xb9, 0x6a, 0x46, 0xc3,
	0x77, 0x60, 0x9e, 0x31, 0xf1, 0xd9, 0x6d, 0xf8, 0xf2, 0xc6, 0x5f, 0x93, 0x79, 0x1a, 0x86, 0x40,
	0x03, 0x21, 0xfe, 0xeb, 0xc6, 0x80, 0xe0, 0x6b, 0x30, 0xde, 0x72, 0x75, 0x3a, 0x74, 0x15, 0xe5,
	0xdc, 0xc9, 0x75, 0x94, 0xa6, 0x1c, 0x4f, 0x1b, 0xb1, 0x6f, 0x47, 0x87, 0x7c, 0x3f, 0x3a, 0xe4,
	0xc7, 0xd1, 0x21, 0x5f, 0x7f, 0x3a, 0xda, 0xd2, 0x28, 0x9e, 0xfe, 0xcb, 0x5f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x2f, 0x4b, 0xe7, 0x72, 0x0d, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BookmarksServiceClient is the client API for BookmarksService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookmarksServiceClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	LastAdded(ctx context.Context, in *LastAddedRequest, opts ...grpc.CallOption) (*LastAddedResponse, error)
	All(ctx context.Context, in *LastAddedRequest, opts ...grpc.CallOption) (BookmarksService_AllClient, error)
	GetAll(ctx context.Context, in *AllRequest, opts ...grpc.CallOption) (*AllResponse, error)
}

type bookmarksServiceClient struct {
	cc *grpc.ClientConn
}

func NewBookmarksServiceClient(cc *grpc.ClientConn) BookmarksServiceClient {
	return &bookmarksServiceClient{cc}
}

func (c *bookmarksServiceClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/bookmarks.BookmarksService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookmarksServiceClient) LastAdded(ctx context.Context, in *LastAddedRequest, opts ...grpc.CallOption) (*LastAddedResponse, error) {
	out := new(LastAddedResponse)
	err := c.cc.Invoke(ctx, "/bookmarks.BookmarksService/LastAdded", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookmarksServiceClient) All(ctx context.Context, in *LastAddedRequest, opts ...grpc.CallOption) (BookmarksService_AllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BookmarksService_serviceDesc.Streams[0], "/bookmarks.BookmarksService/All", opts...)
	if err != nil {
		return nil, err
	}
	x := &bookmarksServiceAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BookmarksService_AllClient interface {
	Recv() (*LastAddedResponse, error)
	grpc.ClientStream
}

type bookmarksServiceAllClient struct {
	grpc.ClientStream
}

func (x *bookmarksServiceAllClient) Recv() (*LastAddedResponse, error) {
	m := new(LastAddedResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bookmarksServiceClient) GetAll(ctx context.Context, in *AllRequest, opts ...grpc.CallOption) (*AllResponse, error) {
	out := new(AllResponse)
	err := c.cc.Invoke(ctx, "/bookmarks.BookmarksService/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookmarksServiceServer is the server API for BookmarksService service.
type BookmarksServiceServer interface {
	Add(context.Context, *AddRequest) (*AddResponse, error)
	LastAdded(context.Context, *LastAddedRequest) (*LastAddedResponse, error)
	All(*LastAddedRequest, BookmarksService_AllServer) error
	GetAll(context.Context, *AllRequest) (*AllResponse, error)
}

func RegisterBookmarksServiceServer(s *grpc.Server, srv BookmarksServiceServer) {
	s.RegisterService(&_BookmarksService_serviceDesc, srv)
}

func _BookmarksService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookmarksServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookmarks.BookmarksService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookmarksServiceServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookmarksService_LastAdded_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LastAddedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookmarksServiceServer).LastAdded(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookmarks.BookmarksService/LastAdded",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookmarksServiceServer).LastAdded(ctx, req.(*LastAddedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookmarksService_All_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(LastAddedRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BookmarksServiceServer).All(m, &bookmarksServiceAllServer{stream})
}

type BookmarksService_AllServer interface {
	Send(*LastAddedResponse) error
	grpc.ServerStream
}

type bookmarksServiceAllServer struct {
	grpc.ServerStream
}

func (x *bookmarksServiceAllServer) Send(m *LastAddedResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _BookmarksService_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookmarksServiceServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookmarks.BookmarksService/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookmarksServiceServer).GetAll(ctx, req.(*AllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BookmarksService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bookmarks.BookmarksService",
	HandlerType: (*BookmarksServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _BookmarksService_Add_Handler,
		},
		{
			MethodName: "LastAdded",
			Handler:    _BookmarksService_LastAdded_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _BookmarksService_GetAll_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "All",
			Handler:       _BookmarksService_All_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "bookmarks.proto",
}

func (m *AddRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.URL) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBookmarks(dAtA, i, uint64(len(m.URL)))
		i += copy(dAtA[i:], m.URL)
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBookmarks(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if m.Status != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintBookmarks(dAtA, i, uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *AddResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *LastAddedRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LastAddedRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *LastAddedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LastAddedResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.ID) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintBookmarks(dAtA, i, uint64(len(m.ID)))
		i += copy(dAtA[i:], m.ID)
	}
	if len(m.URL) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintBookmarks(dAtA, i, uint64(len(m.URL)))
		i += copy(dAtA[i:], m.URL)
	}
	if len(m.Title) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintBookmarks(dAtA, i, uint64(len(m.Title)))
		i += copy(dAtA[i:], m.Title)
	}
	if m.Status != 0 {
		dAtA[i] = 0x20
		i++
		i = encodeVarintBookmarks(dAtA, i, uint64(m.Status))
	}
	if m.LastTimes != 0 {
		dAtA[i] = 0x28
		i++
		i = encodeVarintBookmarks(dAtA, i, uint64(m.LastTimes))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *AllRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AllRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *AllResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AllResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Total != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintBookmarks(dAtA, i, uint64(m.Total))
	}
	if len(m.Data) > 0 {
		for _, msg := range m.Data {
			dAtA[i] = 0x12
			i++
			i = encodeVarintBookmarks(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintBookmarks(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *AddRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.URL)
	if l > 0 {
		n += 1 + l + sovBookmarks(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovBookmarks(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovBookmarks(uint64(m.Status))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AddResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LastAddedRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LastAddedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ID)
	if l > 0 {
		n += 1 + l + sovBookmarks(uint64(l))
	}
	l = len(m.URL)
	if l > 0 {
		n += 1 + l + sovBookmarks(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovBookmarks(uint64(l))
	}
	if m.Status != 0 {
		n += 1 + sovBookmarks(uint64(m.Status))
	}
	if m.LastTimes != 0 {
		n += 1 + sovBookmarks(uint64(m.LastTimes))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AllRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AllResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Total != 0 {
		n += 1 + sovBookmarks(uint64(m.Total))
	}
	if len(m.Data) > 0 {
		for _, e := range m.Data {
			l = e.Size()
			n += 1 + l + sovBookmarks(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBookmarks(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozBookmarks(x uint64) (n int) {
	return sovBookmarks(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *AddRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBookmarks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field URL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBookmarks
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBookmarks
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.URL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBookmarks
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBookmarks
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBookmarks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBookmarks
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBookmarks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBookmarks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBookmarks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBookmarks
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBookmarks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LastAddedRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBookmarks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LastAddedRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LastAddedRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBookmarks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBookmarks
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBookmarks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LastAddedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBookmarks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LastAddedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LastAddedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBookmarks
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBookmarks
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field URL", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBookmarks
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBookmarks
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.URL = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBookmarks
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBookmarks
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			m.Status = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Status |= Status(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastTimes", wireType)
			}
			m.LastTimes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastTimes |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipBookmarks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBookmarks
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBookmarks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AllRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBookmarks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AllRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AllRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBookmarks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBookmarks
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBookmarks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AllResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBookmarks
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AllResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AllResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBookmarks
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBookmarks
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBookmarks
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data, &LastAddedResponse{})
			if err := m.Data[len(m.Data)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBookmarks(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBookmarks
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBookmarks
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBookmarks(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBookmarks
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBookmarks
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBookmarks
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBookmarks
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthBookmarks
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowBookmarks
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipBookmarks(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthBookmarks
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthBookmarks = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBookmarks   = fmt.Errorf("proto: integer overflow")
)
